#pragma GCC optimize("Ofast")
#include <iostream>
#include <string>
using namespace std;
using ll = unsigned long long;

string crbits = "00000111110000100100011000011100101110011111001100101010010001000011010100001000011110011111101110000011000110111111111001101111011100011001000000011100110000101011011101111000001101000111111111100001000010001110000011111101011000011111100000101111111011100010011011100011111111101001000011100000000101110100000010000100111110110000011110001011111111101011111100011110001000111100001111010100011111100111101111111010001010111100111000011100001111101111100011011110111111000010011111000100000000001110000100000111011111100001111111101100000001100010000000001111100011001111111111111111000111001000000011101011110000011110010100010000000110011110101101100111100011111101111110001000010000011001110111110010111100000110011000001110110000001100110110001111000000011110001000110011110111100100110010001111111110101111111001110101010011101010000101110010111101111010001100011110000000000001111110110011101011110000001110001110011001111100100000001111000111000011101000110000001111110111111100111000011000000010001111000110011011111000110000011000100011000000100101110011111000001101110110001000111100011000000000011010100011111111011100011111110000001001111011111011110011100000001000011000000000000100011011111111000011100111110110101110000001111110100110111111101010001101000100001001111010000011110111110011110010011110000110011011100011100000000011001100100000000000001100110011000011000111001001100000100000111001111111111111000011000011110011010100011111100101000010011010001111110001100111011111000000001110011111000000010000000100000011100101010111101001101100010001111100001100000011110000001110111111000100010000100110110001110000011110000000111000101000110111111011001110110001100101111100000101011000011101000111110011011000000000101011111011111111001111111111001111111111100100011111001001011100011001000000100110000101111111101001011101101111011110110011000111000011010100100011111110011100001111101100000001011001110000010001001111111000011100101110001111000110000111000110011101110110001110000110011110111111100000101001011000101011011111000110011100010011001111011110100110011111000000111100110101000111010001111100110000011100110000110011111000101000000100011011001100000000111111101000000111010011100110101011111110011000111011110001110100100010100000011000001110111100111110001000111001001100110100011010000000100111011011000111011110001110110100110001100111110011100001110110000001000111000110111100000001111010000001101110010001101110101100001110111101001110110110000101101111110110000111111011100110000000010010100001001111100101010011100110010110011001000001101100101100110010000000010001100000110110011110011111110111101010100011100101111001001011100011000000110100101111000001111000100110011110110111111000001100101001000010100111100101111011100011101010100011000101001011000000101111100000011011101100101101010100010010011001011011101101111000011011111100010011010000101111001011011101100101111100110100011111110011100011110111111100000101111011011100100001011101101110111100000101100100011100111010000001101000001100010100110110110011010100001111001000011101100011011111110100000011101111011001111001111100011100011100000110111100000000111111100011101000010001111110000100000011111001111101111100011000000111000000100000001101010000111100010011000000000001111001111101111001110010011101100000111111110010011111001100101011100000110001100011001001110011101101101000111110000001100010100011111000011000111111100101000001000001101111100010100000011010000100001111010000100000010111111100010110101001111000010111100000110000011000000000101110001001111000110001111101010100001100011111100011101000111110001001010001101011000010001010110110010001001011110111110111001000000001000011010000011001111001101100010010110001001001010111100001011111111011010000011100110000000001111101110111101110110000100100110000001101000111111111110001111000011000110010000011010110011111010000000001101101011001110111100110101110101111000001011111100100010011000111000010101010001010010010011000011000100111100000000000001111100011000110011101100000010001011110000101000001000000011001101000001100000000100111001100010111000000001110011101011010001011011111010100010111011001101100100001011100110101010001100001111110011010000101100010000111110000010011001100010001101110011111000100101100000001101111000110000101100111010000000010000100001101111001111110000000000001000110001100011000011001001111011110010111000000000000000011011000000101110011001100000111110001111110011100011110111110100000010111011000001100100110000000010001111110110101111101011011011000010111011001001010111100000111000011100001111011101001110011111000110000101100011001100000100111001011100011000111100010011000011111111111100001110000100101100000000101011000010000100101101111110010101101000010011010000111110010101101111010011111000110000110000101110111110001001100000100010010000000110000011001011010001100000100000010011100101000001111000001001110111001110011111101000001110010001010011101001000000011100110011000101100111110111100001100111111001011111110001000001111111000000001001001000110011011110000000111111100011101111111110011110101000000000110011000010111000110111000110010100000001111111101111001100100000000001100110111011110100011011100011111101000100110110100001010100111110101000110010100010000110100011000111001000111000101001110010111000011111001011011111101011111110110011110100000000100110111110011111100100100001000010100000110000101111011111010010001111111011111111011000111101000111001000000100001111100011111011010100000111011101111100000011111010010001000001011111001110110111111011111101010010011111010000101110000000000111101001111111011111100001110000010111000100000111010011101110110110111110111111111111101100111101000111111111110010111001100100000001000000100000100111100000001110000011000000000111000000000001111111110101010011000011110000001011001000000011001001100000000010111001000001101100110011011001101101100001100001111111000000011001110000111100000100110010010111100100001100000111100011100010110001101111000011000001001110100000111111000000111001111010110001100110000110100101001110011111001010000100110001111111111101000101001111110111110111000011111001100001110000000011100000111100000000000000011011111011000100001000000000000000100001100111011011001001111100110011010001001000000111101101110011100000011011001110000001100001110001000000111110111111000000000111000000100110000110110110000000000001000011111110111111000000100111100001001001011000110001111100000111100100001101000001111111111111110010001010100000011000000001110001001111000011100000010001010000000001111011011110010000111011111111111001111000011110001111110011100000101000011111110111111011111110111101110110000000111111100000010001101001110111100011110000001111110011110010000011000011100011011101100000011111100100000111111001000011111001100000101111000001110001011100011001111001100110100111111000000000110000110001111000001111100011111111111000000000011000010111011100111001000101011100100100000000000010000001000010010010001110000000111000110110000000001010000000000010000001010011111011111011111000110000000000111101111101101111000111111110000110110011110011001110111000001010100110000000100111100000100110010001000101011111000000001000011110111111110001111110001110011101110111011110011111111111111111000111100011001100111110000111110000110010001010000000100001110011000001100001000001111101111111001011111110011111100001111111000000000000011000000011110011000000001011011000111110111111101101101101111100000111000000000000001100000010000010000000011111000100011111110110001111101011000010000111000000000000101010000011011111010110";
ll i3 = 12297829382473034411; // inverse of 3

bool check(ll key) {
    ll size = 64;
    ll k = size - 1;

    ll mask = (1ULL<<size)-1;

    ll g = 3;
    bool fail = 0;
    for (int i = 0; i < 401; ++i) {
        key = (key * g)&mask;
        ll b = crbits[i]-'0';
        if (((key>>k)^b) != 0) {
            fail = 1;
            break;
        }
    }
    if (!fail)return 1;
    return 0;
}

ll revert(ll num, int cnt) {
    for (int i = 0; i < cnt; ++i) {
        num *= i3; // Auto mod yay:)
    }
    return num;
}

int main() {
    ll key;
    int sc = 0;
    while (cin >> key) {
        int pw;
        cin >> pw;
        key = revert(key, pw);
        if (check(key)) {
            cout << "Found key " << key << endl;
            return 0;
        }
        if (++sc % 1000000 == 0) {
            cout << "Searched " << sc << " keys" << endl;
        }
    }
}
